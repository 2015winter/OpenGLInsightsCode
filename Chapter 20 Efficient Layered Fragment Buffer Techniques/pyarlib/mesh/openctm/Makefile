
#Makefile generated by genmake.py (pknowles pyar.knowles@rmit.edu.au)
#Known Bugs: Not all source files/headers of sublibs (projects with their own
#makefile in subdirectories) are searched. Hence, the external library prediction
#does not always get all results

#check x64
ASFX=
LBITS := $(shell getconf LONG_BIT)
ifeq ($(LBITS),64)
ASFX=64
endif

NOOP = @$(SHELL) -c true


TARGET=libopenctm$(ASFX).a
CC=gcc
LD=ar
CFLAGS_R?=
CFLAGS= $(CFLAGS_R) -Wno-unused-parameter -Wno-unused-but-set-variable -Wall -Wextra -D_GNU_SOURCE -Wfatal-errors
LFLAGS= -rcs 
SUBLIBS= 
OBJECTS= openctm.o compressRAW.o LzmaDec.o compressMG1.o LzmaLib.o stream.o LzmaEnc.o LzFind.o compressMG2.o Alloc.o

all:  $(TARGET)

debug: CFLAGS+= -g
debug: export CFLAGS_R+= -g
debug: all

ALL_SUBLIBS= $(SUBLIBS)

echodeps:
	@echo $(ALL_SUBLIBS)

$(TARGET): $(SUBLIBS) $(OBJECTS)
	@echo linking $(TARGET) '$(CFLAGS_R)'
	@$(LD) -o $(TARGET) $(OBJECTS) $(ALL_SUBLIBS) $(LFLAGS)
openctm.o: openctm.c openctm.h openctmpp.h internal.h
	@echo compiling openctm.c
	@$(CC) -c -o openctm.o $(CFLAGS) openctm.c
compressRAW.o: compressRAW.c openctm.h openctmpp.h internal.h
	@echo compiling compressRAW.c
	@$(CC) -c -o compressRAW.o $(CFLAGS) compressRAW.c
LzmaDec.o: LzmaDec.c NameMangle.h Types.h LzmaDec.h
	@echo compiling LzmaDec.c
	@$(CC) -c -o LzmaDec.o $(CFLAGS) LzmaDec.c
compressMG1.o: compressMG1.c openctm.h openctmpp.h internal.h
	@echo compiling compressMG1.c
	@$(CC) -c -o compressMG1.o $(CFLAGS) compressMG1.c
LzmaLib.o: LzmaLib.c NameMangle.h Types.h LzmaLib.h LzmaDec.h Alloc.h LzmaEnc.h
	@echo compiling LzmaLib.c
	@$(CC) -c -o LzmaLib.o $(CFLAGS) LzmaLib.c
stream.o: stream.c NameMangle.h Types.h openctm.h openctmpp.h LzmaLib.h internal.h
	@echo compiling stream.c
	@$(CC) -c -o stream.o $(CFLAGS) stream.c
LzmaEnc.o: LzmaEnc.c NameMangle.h Types.h LzFind.h LzmaEnc.h
	@echo compiling LzmaEnc.c
	@$(CC) -c -o LzmaEnc.o $(CFLAGS) LzmaEnc.c
LzFind.o: LzFind.c LzHash.h LzFind.h Types.h NameMangle.h
	@echo compiling LzFind.c
	@$(CC) -c -o LzFind.o $(CFLAGS) LzFind.c
compressMG2.o: compressMG2.c openctm.h openctmpp.h internal.h
	@echo compiling compressMG2.c
	@$(CC) -c -o compressMG2.o $(CFLAGS) compressMG2.c
Alloc.o: Alloc.c NameMangle.h Alloc.h
	@echo compiling Alloc.c
	@$(CC) -c -o Alloc.o $(CFLAGS) Alloc.c
clean:
	@echo cleaning $(TARGET)
	@rm -f openctm.o compressRAW.o LzmaDec.o compressMG1.o LzmaLib.o stream.o LzmaEnc.o LzFind.o compressMG2.o Alloc.o
	@rm -f $(TARGET)










