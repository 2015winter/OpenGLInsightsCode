
#Makefile generated by genmake.py (pknowles pyar.knowles@rmit.edu.au)
#Known Bugs: Not all source files/headers of sublibs (projects with their own
#makefile in subdirectories) are searched. Hence, the external library prediction
#does not always get all results

#check x64
ASFX=
LBITS := $(shell getconf LONG_BIT)
ifeq ($(LBITS),64)
ASFX=64
endif

NOOP = @$(SHELL) -c true


TARGET=lfb
CC=g++
LD=g++
CFLAGS_R?=
CFLAGS= $(CFLAGS_R) -Wno-unused-parameter -Wno-unused-but-set-variable  `pkg-config freetype2 --cflags` -Wall -Wextra -D_GNU_SOURCE -Wfatal-errors
LFLAGS=  
LFLAGS+= -lSDL13 -lGLU -lGLEW `pkg-config freetype2 --libs` -lm -lpthread -lpng -lz -lGL
SUBLIBS= pyarlib/pyarlib$(ASFX).a
OBJECTS= lfbLinked.o lfbRagged.o lfbBasic.o main.o imageBuffer.o lfbPages.o lfb.o prefixSums.o

all: pyarlibpyarliba $(TARGET)

debug: CFLAGS+= -g
debug: export CFLAGS_R+= -g
debug: all

ALL_SUBLIBS= $(SUBLIBS)
SUBSUBLIBS= $(shell make echodeps --no-print-directory -C pyarlib/ 2>/dev/null)
ALL_SUBLIBS+= $(SUBSUBLIBS:%.a=pyarlib/%.a)

echodeps:
	@echo $(ALL_SUBLIBS)

$(TARGET): $(SUBLIBS) $(OBJECTS)
	@echo linking $(TARGET) '$(CFLAGS_R)'
	@$(LD) -o $(TARGET) $(OBJECTS) $(ALL_SUBLIBS) $(LFLAGS)
pyarlib/pyarlib$(ASFX).a:
	$(NOOP) #just so $(ASFX) doesnt cause makefile complaints
pyarlibpyarliba:
	@$(MAKE) --no-print-directory -C pyarlib -q || ( echo +pyarlib && $(MAKE) --no-print-directory -C pyarlib && echo -pyarlib )
lfbLinked.o: lfbLinked.cpp extraglenums.h pyarlib/vec.h pyarlib/shader.h lfbLinked.h lfb.h pyarlib/matrix.h imageBuffer.h pyarlib/util.h pyarlib/shaderutil.h pyarlib/profile.h
	@echo compiling lfbLinked.cpp
	@$(CC) -c -o lfbLinked.o $(CFLAGS) lfbLinked.cpp
lfbRagged.o: lfbRagged.cpp lfbRagged.h pyarlib/vec.h pyarlib/shader.h prefixSums.h lfb.h pyarlib/matrix.h imageBuffer.h pyarlib/util.h pyarlib/shaderutil.h pyarlib/profile.h
	@echo compiling lfbRagged.cpp
	@$(CC) -c -o lfbRagged.o $(CFLAGS) lfbRagged.cpp
lfbBasic.o: lfbBasic.cpp pyarlib/matrix.h imageBuffer.h pyarlib/util.h pyarlib/vec.h pyarlib/shader.h pyarlib/shaderutil.h lfb.h pyarlib/profile.h lfbBasic.h
	@echo compiling lfbBasic.cpp
	@$(CC) -c -o lfbBasic.o $(CFLAGS) lfbBasic.cpp
main.o: main.cpp pyarlib/pyarlib.h lfbRagged.h pyarlib/vec.h pyarlib/shader.h lfbLinked.h lfb.h extraglenums.h pyarlib/matrix.h lfbPages.h pyarlib/profile.h pyarlib/prec.h lfbBasic.h
	@echo compiling main.cpp
	@$(CC) -c -o main.o $(CFLAGS) main.cpp
imageBuffer.o: imageBuffer.cpp pyarlib/shader.h pyarlib/prec.h pyarlib/includegl.h imageBuffer.h
	@echo compiling imageBuffer.cpp
	@$(CC) -c -o imageBuffer.o $(CFLAGS) imageBuffer.cpp
lfbPages.o: lfbPages.cpp extraglenums.h pyarlib/vec.h lfbPages.h pyarlib/shader.h lfbLinked.h lfb.h pyarlib/matrix.h imageBuffer.h pyarlib/util.h pyarlib/shaderutil.h pyarlib/profile.h
	@echo compiling lfbPages.cpp
	@$(CC) -c -o lfbPages.o $(CFLAGS) lfbPages.cpp
lfb.o: lfb.cpp pyarlib/matrix.h imageBuffer.h pyarlib/util.h pyarlib/vec.h pyarlib/shaderutil.h pyarlib/shader.h pyarlib/profile.h lfb.h pyarlib/includegl.h
	@echo compiling lfb.cpp
	@$(CC) -c -o lfb.o $(CFLAGS) lfb.cpp
prefixSums.o: prefixSums.cpp imageBuffer.h pyarlib/util.h pyarlib/shaderutil.h pyarlib/shader.h prefixSums.h pyarlib/includegl.h
	@echo compiling prefixSums.cpp
	@$(CC) -c -o prefixSums.o $(CFLAGS) prefixSums.cpp
clean:
	@echo cleaning $(TARGET)
	@rm -f lfbLinked.o lfbRagged.o lfbBasic.o main.o imageBuffer.o lfbPages.o lfb.o prefixSums.o
	@echo +pyarlib
	@$(MAKE) clean --no-print-directory -C pyarlib
	@echo -pyarlib
	@rm -f $(TARGET)










